//Coding by ZeroKurosakii
//Author:張竣傑
//NYCU dep. Civil Engineering
//From LeetCode 918 Maximum Sum Circular Subarray
class Solution {
public:
    int maxSubarraySumCircular(vector<int>& nums) {
        int len = nums.size();
        int max_cur, max_glo, min_cur, min_glo, total;
        max_cur = max_glo = min_cur = min_glo = total = nums[0];
        for(int i = 1 ; i < len ; i++){
            max_cur = max(nums[i], max_cur+nums[i]);
            max_glo = max(max_glo, max_cur);
            min_cur = min(nums[i], min_cur+nums[i]);
            min_glo = min(min_glo, min_cur);
            total = total + nums[i];
        }
        if(total == min_glo){
            return max_glo;
        }
        return max(max_glo, total - min_glo);
    }
};
